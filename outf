CC = cc -lreadline
CFLAGS =  -Wall -Wextra -g -fsanitize=address #-Werror#-O3
#valgrind --leak-check=full --show-leak-kinds=all 
#--track-fds=yes ./pipex /dev/random  head out.txt
SRCS =	parser.c \
		main.c \
		path.c \
		Aux/ft_calloc.c \
		Aux/lists_aux.c \
		Aux/ft_free_matrix.c \
		Aux/ft_matrixlen.c \
all: fingers $(NAME) done
	@echo "$(YELLOW)Code getting the VIP treatment in the compiler...$(RESET)"
	@echo "$(GREEN)The $(NAME) was successfully graduated from compile school!$(RESET)\n"
clean:
	@echo "\033[31mTemporary object files deleted\033[0m"
fclean: clean
	@echo "\033[31mExecutable deleted\033[0m"
fclean_all: clean fclean_checker
re: fclean all
do: all clean
	norminette -R CheckForbiddenSourceHeader -R CheckDefine *.c
	norminette -R CheckForbiddenSourceHeader -R CheckDefine Aux/*.c
.PHONY: all clean fclean re bonus do
#$@: Is the name of the output file that this rule will create. 
#	 In this case, it's the name of the object file being created.
#$<: Contains the name of the first dependency of the rule, which is the name of the source file being compiled. 
#-c: This is a flag that tells the compiler to compile 
#	 the source file into an object file, without linking 
#	 it to other object files or libraries.
#@echo "$(GREEN)Another day, another successful compile.$(RESET)"
#@echo "$(GREEN)Ready to use "$@"!$(RESET)"
#@echo "$(GREEN)The "$@" was successfully graduated from compile school!$(RESET)"
